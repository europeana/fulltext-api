<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>fulltext</artifactId>
        <groupId>eu.europeana</groupId>
        <version>0.9.7-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>eu.europeana.fulltext</groupId>
    <artifactId>api</artifactId>
    <version>0.9.7-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Europeana Newspapers Fulltext API</name>
    <description>Europeana Newspapers Fulltext API (Spring Boot application)</description>

    <properties>
        <spring.boot.mainclass>eu.europeana.fulltext.api.FtApplication</spring.boot.mainclass>
        <solr-solrj.version>8.11.1</solr-solrj.version>
        <javax-validation.version>2.0.1.Final</javax-validation.version>
        <apache-commons-text.version>1.10.0</apache-commons-text.version>
        <spring-boot-starter-data-solr.version>2.4.13</spring-boot-starter-data-solr.version>
        <maven-surefire.version>2.22.2</maven-surefire.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>eu.europeana.fulltext</groupId>
            <artifactId>common</artifactId>
            <version>0.9.7-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!-- use log4j2 instead -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Including non-vulnerable tomcat dependency.
        spring-boot-starter-tomcat Includes version 9.0.56, which is vulnerable See : CVE-2022-23181
        All tomcat components specifically added to override spring-boot-starter-tomcat -->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>tomcat-annotations-api</artifactId>
                    <groupId>org.apache.tomcat</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-websocket</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-el</artifactId>
            <version>${tomcat.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- for search -->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-solr -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-solr</artifactId>
            <version>${spring-boot-starter-data-solr.version}</version>
            <!-- TODO replace spring-boot-started-data-solr with something else (solrj?) because it's deprecated
              See also https://spring.io/blog/2020/04/07/spring-data-for-apache-solr-discontinued -->
        </dependency>
        <!-- TODO As a temporary solution we override the used version of solrj to include a less vulnerable one -->
        <!-- https://mvnrepository.com/artifact/org.apache.solr/solr-solrj -->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>${solr-solrj.version}</version>
            <!-- SolrJ latest version 9.0.0 still uses the vulnerable version - 9.4.44.v20210927
            for http2 and jetty dependency. Add the dependency separately for
            http2-client, http2-common , http2-http-client-transport and jetty-io -->
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <!-- Override the http2-client, http2-common , jetty-io , jetty-http, jetty-util, jetty-client version for CVE-2022-2048-->
        <dependency>
            <groupId>org.eclipse.jetty.http2</groupId>
            <artifactId>http2-client</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.http2</groupId>
            <artifactId>http2-common</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.http2</groupId>
            <artifactId>http2-http-client-transport</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-io</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-client</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-alpn-client</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-alpn-java-client</artifactId>
            <version>${eclipse-jetty.version}</version>
        </dependency>

        <!-- for serializing -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <!-- <version>${jackson.version}</version> For some reason specifying a new version will make SpringDoc fail -->
        </dependency>

        <!-- see https://github.com/io-informatics/jackson-jsonld -->
        <dependency>
            <groupId>com.io-informatics.oss</groupId>
            <artifactId>jackson-jsonld</artifactId>
            <version>${io-informatics.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax-validation.version}</version>
        </dependency>

        <!-- StringUtils -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <!-- StringUtilsEscape in commons-lang3 was moved to commons-text -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${apache-commons-text.version}</version>
        </dependency>


        <dependency>
            <groupId>eu.europeana.api.commons</groupId>
            <artifactId>commons-web</artifactId>
            <version>${api-commons.version}</version>
            <exclusions>
                <!-- version 1.3, also vulnerable. Adding below non-vulnerable version 1.5.1-->
                <exclusion>
                    <groupId>org.codehaus.jettison</groupId>
                    <artifactId>jettison</artifactId>
                </exclusion>
                <!-- Excluded for CVE-2022-22978. Added below non-vulnerable version-->
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-config</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--non-vulnerable version -->
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>${jettison.version}</version>
        </dependency>


        <!-- Test stuff -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver-dns-native-macos</artifactId>
        </dependency>

        <!--testcontainers for integration testing-->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
            <exclusions>
                <!--Excluding common-compress due to CVE-2021-35517, CVE-2021-35516, CVE-2021-35515, CVE-2021-36090.
                version is 1.20 is vulnerable. Also the dependency is duplicate and coming from commons-web-> jena-core -> jena-base now -->
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-compress</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${mock-webserver.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${mock-webserver.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!--this removes the version number from the deployed archive-->
        <finalName>fulltext</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
                <version>${maven-surefire.version}</version>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <attachClasses>true</attachClasses>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
